## Subsequência crescente máxima

Problema: Dado um vetor (uma sequência de números) A[1...n], encontrar a maior subsequência crescente de A[1...n]. 

**O que é uma subsequência**: Uma subsequencia de um conjunto de numeros A é o resultado de remover um numero arbitrario de elementos de A. Vamos supor nessa seção que nossas subsequências são todas de tamanho não nulo.

Assim, queremos achar S[a, ...., b] tal que S[a] = A[1], .... S[b] = A[k]. Nesse caso dizemos que a subsequência tem tamanho k e que **b casa com k**: Isso quer dizer que, se começarmos a subsequencia em A[1], a subsequencia vai até b. E isso corresponderia a ir até A[k]. 

O algoritmo recursivo para resolver o problema da SSCM é muito ineficiente e nem vamos aborda-lo aqui. Vamos direto ao que interessa e estudar a solução em programação dinamica.

Aqui, vamos nos preocupar em encontrar o **tamanho** da SSCM. Poderiamos facilmente recuperar os itens, mas por enquanto queremos apenas o tamanho.

### Desenho de uma solução de pd

Primeiro, vamos analisar a subestrutura ótima do problema.

Dado um conjunto A[1...i], é verdade que o tamanho da SSCM de A[1..i] depende da SSCM de A[1..i-1]? Sim, depende. Na verdade, a sscm de A[1..i] é exatamente a sscm de A[1..i-1] ou esta sscm mas com um elemento adicional: A[i] (por consequência, seu tamanho é exatamente uma unidade a mais que o subproblema anterior).



Assim, o que vamos fazer é exatamente armazenar numa tabela c o tamanho  das soluções das instâncias de tamanho 1, 2, ..., n. Segue o algoritmo:

```
sscm-pd(A,n)
1. para m:=1 ate n
2. 	c[m] := 1
3. 	para i:m-1 decrescendo ate 1
4. 			se A[i] <= A[m] e c[i] + 1 > c[m]
5.				c[m] := c[i] + 1
6. devolva c[1..n]
```

O que esse algoritmo faz, na lina 1, é montar os problemas de tamanho 1 até n.  Inicializamos a solução da instancia de tamanho m em c[m].Na linha 3, examinamos todos subproblemas anteriores. Se vale que estamos olhando uma subsequencia crescente (condicional da linha 4), e o subproblema anterior é pelo menos igual ao atual, então vale a pena atualizarmos a solução da instancia m para conter a solução da instancia de tamanho i. Ao fim da execução do algoritmo, temos as soluções de todos subproblemas de tamanho 1, 2, 3... n.



Note que o algoritmo retorna todas SSCM dpara problemas de tamanho 1,2,3,..,n. Para acharmos o maximo é simples:

```
sscm-max(A, n)
1. c := sscm-pd(A, n)
2. cmax := 0
3. para i:= 1 ate n
4. 		se c[i] > cmax
5.			cmax := c[i]
6. devolva cmax
```

